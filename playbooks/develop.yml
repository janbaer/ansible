---
- name: Install development tools and also Go with packages
  hosts: localhost
  become: True

  tasks:
    - name: Install basic development tools
      pacman:
        name:
          - base-devel
          - cmake
          - ctags                   # Its required for the tags plugin in VIM
          - gitg                    # GUI for Git
          - highlight               # Higlighting sourcecode
          - jq                      # Tool for querying json in the commandline
          - httpie                  # My favorite tools for HTTP request in the commandline
          - meld                    # Difftool with UI
        state: present
      become_user: "root"

    - name: Install developer packages from aur
      become_user: "{{ USER_NAME }}"
      aur:
        use: trizen
        name:
          - git-extras
          - http-prompt
      become_user: "{{ USER_NAME }}"

    - name: check if go is installed at all
      stat:
        path: "{{ GO_BIN_PATH }}"
      register: GO_IS_INSTALLED
      tags: go

    - name: check go version
      command: "go version"
      register: GO_CHECK_VERSION
      when: "GO_IS_INSTALLED.stat.exists"
      changed_when: False
      failed_when: False
      tags: go

    - name: Print Go version
      debug:
        msg: "Go {{ GO_VERSION }} is installed, not action is required."
      when: "GO_IS_INSTALLED.stat.exists and GO_VERSION in GO_CHECK_VERSION.stdout"
      tags: go

    - name: Download Go archive
      get_url:
        url: "https://dl.google.com/go/{{ GO_ARCHIVE_NAME }}"
        dest: "/tmp/{{ GO_ARCHIVE_NAME }}"
        mode: 0440
      when: "not GO_IS_INSTALLED.stat.exists or GO_VERSION not in GO_CHECK_VERSION.stdout"
      become_user: "{{ USER_NAME }}"
      tags: go

    - name: Remove any previous existing Go installation
      file:
        name: "{{ GO_INSTALL_PATH }}"
        state: absent
      become_user: "root"
      when: "not GO_IS_INSTALLED.stat.exists or GO_VERSION not in GO_CHECK_VERSION.stdout"
      tags: go

    - name: Install golang
      unarchive:
        src: "/tmp/{{ GO_ARCHIVE_NAME }}"
        dest: "/usr/local"
      become_user: "root"
      when: "not GO_IS_INSTALLED.stat.exists or GO_VERSION not in GO_CHECK_VERSION.stdout"
      tags: go

    - name: Install tools with Go
      become_user: "{{ USER_NAME }}"
      command: "go get -u {{ item }}"
      with_items:
        - golang.org/x/tools/cmd/godoc
      tags: go


